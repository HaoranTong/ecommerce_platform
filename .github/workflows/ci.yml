name: CI - dev & feature

on:
  push:
    branches: [ dev, 'feature/**' ]
  pull_request:
    branches: [ dev, main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: dev_vision
        ports: ['3306:3306']
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=5s --health-timeout=10s --health-retries=10
      redis:
        image: redis:7
        ports: ['6379:6379']
        options: --health-cmd="redis-cli ping" --health-interval=5s --health-retries=10

    steps:
      - uses: actions/checkout@v4
        name: Checkout

      - uses: actions/setup-python@v4
        name: Set up Python
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            mysql -h 127.0.0.1 -P 3306 -u root -prootpass -e 'SELECT 1' &>/dev/null && break
            sleep 2
          done

      - name: Run alembic migrations
        env:
          ALEMBIC_DSN: mysql+pymysql://root:rootpass@127.0.0.1:3306/dev_vision
        run: alembic upgrade head

      - name: Run tests
        env:
          DATABASE_URL: mysql+pymysql://root:rootpass@127.0.0.1:3306/dev_vision
        run: pytest -q

  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Print debug info
        run: |
          echo "github.ref=${{ github.ref }}"
          echo "GITHUB_REF=${GITHUB_REF}"
          echo "needs.test.result=${{ needs.test.result }}"

      - name: Exit early when not dev
        if: ${{ github.ref != 'refs/heads/dev' }}
        run: |
          echo 'Not on dev; skipping release steps.'
          exit 0

      - name: Checkout (persist credentials)
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Merge dev -> main
        run: |
          echo "Skipping direct git push in favor of opening a PR (protected main compatibility)."

      - name: Record release (no PR created)
        run: |
          pwsh -NoProfile -Command "& './scripts/log_status.ps1' -Message 'CI: release job ran (no PR created)' -Files '' -PrUrl '' -Author 'ci' -Commit '${{ github.sha }}' -Branch 'main' -Actor '${{ github.actor }}'"
